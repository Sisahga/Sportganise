name: CI checks backend

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  format:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"
          cache: maven

      - name: Run formatter
        run: mvn spotless:check --batch-mode

  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"
          cache: maven

      - name: Run linter
        run: mvn checkstyle:check --batch-mode -Dcheckstyle.violationSeverity=warning -Dcheckstyle.failOnViolation=true

  build-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    env:
      ENV: DEV
      # Postgres
      POSTGRES_DB: sportganise
      POSTGRES_USER: sportganise
      POSTGRES_PASSWORD: sportganise-e2e
      POSTGRES_URL: jdbc:postgresql://database:5432/sportganise
      # Auth0
      AUTH0_DOMAIN: ${{ secrets.AUTH0_DOMAIN }}
      AUTH0_AUDIENCE: ${{ secrets.AUTH0_AUDIENCE }}
      AUTH0_CLIENT_ID: ${{ secrets.AUTH0_CLIENT_ID }}
      AUTH0_CLIENT_SECRET: ${{ secrets.AUTH0_CLIENT_SECRET }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      # AWS S3
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_S3_BUCKET_NAME: ${{ secrets.AWS_S3_BUCKET_NAME }}
      AWS_S3_REGION: ${{ secrets.AWS_S3_REGION }}
      # Email server
      COMPANY_EMAIL: ${{ secrets.COMPANY_EMAIL }}
      COMPANY_EMAIL_PASSWORD: ${{ secrets.COMPANY_EMAIL_PASSWORD }}
      # Firebase FCM
      FIREBASE_FCM_JSON_FILE: firebase-configuration-file.json

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Create config files required by backend
      - name: Create backend config files
        run: echo '${{ secrets.FIREBASE_CONFIGURATION_FILE }}' > ../backend/src/main/resources/firebase-configuration-file.json

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "21"
          cache: maven

      - name: Build and test
        run: mvn --batch-mode package 2>&1 | grep -vF '[INFO] Download'

  build-image:
    runs-on: ubuntu-latest
    needs: [format, lint]

    defaults:
      run:
        working-directory: ./backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build .
